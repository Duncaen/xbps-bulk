#!/bin/dash
VERSION=0.0.0

CFG_CMDLINE=
CFG_CROSS=
CROSS_ARCH=
DISTDIR=
MASTERDIR=
HOSTDIR=
SRCPKGS=
XSC=
_append=""
RCV=$(command -v xbps-checkvers 2>/dev/null)
RCV_F="repo-checkvers.txt"
TOBUILD=
USAGE="Usage: $0 [-a cross-arch] [-CN] [-d|-m|-h dir]"

: ${RCV:?"ERROR: The 'xbps-checkvers' was not found in the PATH.\n"}

getlink() {
	p=${1##*/}
	target=$(readlink "$SRCPKGS/$p")
	[ $? -eq 0 ] && [ -n "$target" ] && p=$target
	echo "$p"
}

gendeps() {
	echo "gendeps $1" >&2
	printf 'built/%s:' "$1"
	$XSC show-build-deps "$1" 2>/dev/null | sed -e 's|[<>].*$||g' | \
		while read -r d; do
			[ "$d" = "=" ] && continue
			realdep=$(getlink "$d")
			if [ -e "tobuild/$realdep" ]; then
				touch "./deps/$realdep"
				printf ' %s' "deps/$realdep"
			else
				printf ' %s' "built/$realdep"
			fi
		done
	printf "\n"
}

while getopts a:Cc:d:Nm:th:v OPT; do
	case "$OPT" in
	a)
		CFG_CROSS="-a $OPTARG"
		case "$OPTARG" in
			native-*-musl|native-*)
				unset CFG_CROSS CROSS_ARCH
				export XBPS_ARCH=${OPTARG#native-}
				;;
			native) unset CFG_CROSS CROSS_ARCH;;
			armv6hf) CROSS_ARCH="armv6l";;
			armv6hf-musl) CROSS_ARCH="armv6l-musl";;
			armv7|armv7hf) CROSS_ARCH="armv7l";;
			armv7-musl|armv7hf-musl) CROSS_ARCH="armv7l-musl";;
			*) CROSS_ARCH="$OPTARG";;
		esac
		;;
	v)
		printf "xbps-bulk version $VERSION\n"
		exit 0
		;;
	C)
		rm -rf tobuild built deps
		rm -f *.txt *.d
		exit 0
		;;
	d)
		[ -d $OPTARG ] || {
			printf "ERROR: Cannot find DISTDIR "
			printf "'%s': No such file or directory.\n" "$OPTARG"
			exit 1
		}
		DISTDIR="$OPTARG"
		;;
	N)	CFG_LOCAL="-N";;
	t)	CFG_OVERLAYFS="-t";;
	m)
		[ -d $OPTARG ] || {
			printf "ERROR: Cannot find MASTERDIR "
			printf "'%s': No such file or directory.\n" "$OPTARG"
			exit 1
		}
		MASTERDIR="$OPTARG"
		;;
	h)
		[ -d $OPTARG ] || {
			printf "ERROR: Cannot find HOSTDIR "
			printf "'%s': No such file or directory.\n" "$OPTARG"
			exit 1
		}
		HOSTDIR="$OPTARG"
		;;
	\?)
		printf "%s\n" "$USAGE"
		exit 1
		;;
	esac
done
shift $(($OPTIND - 1))

# Assign defaults
: ${DISTDIR:=$HOME/void-packages}
: ${MASTERDIR:=$DISTDIR/masterdir}
: ${HOSTDIR:=$DISTDIR/hostdir}

SRCPKGS=$DISTDIR/srcpkgs
XBPS_SRCPKGDIR=$SRCPKGS

XSC="$DISTDIR/xbps-src $CFG_CROSS $CFG_LOCAL $CFG_OVERLAYFS -L $CFG_CMDLINE -m $MASTERDIR -H $HOSTDIR"

if [ -n "$CFG_CROSS" ]; then
	export XBPS_TARGET_ARCH=$CROSS_ARCH
fi

RCV_CMD_LINE="$RCV --distdir=${DISTDIR} ${*}"
printf "INFO: Getting list of updates, please wait...\n"
printf "INFO: Running '$RCV_CMD_LINE' (${CROSS_ARCH:-native}) ...\n"

$RCV_CMD_LINE >>"$RCV_F" || {
	echo "ERROR: xbps-checkvers exited with an error: $?"
	exit 1
}

grep pkgname "$RCV_F" | awk '{ print $2 }' > pkgs.txt

printf "INFO: Creating source targets...\n"
rm -rf tobuild built deps
mkdir -p tobuild built deps

printf "INFO: Generating a proper list (without subpkgs)...\n"
while read -r p; do
	[ -f "$SRCPKGS/$p/template" ] || continue
	$XSC show-avail "$p" 2>/dev/null || continue
	realdep=$(getlink "$p")
	[ -e "./tobuild/$realdep" ] && continue
	touch "./tobuild/$realdep"
	TOBUILD="$TOBUILD $realdep"
done < pkgs.txt

printf "INFO: Generate config...\n"
cat <<EOF >config.mk
DISTDIR		= ${DISTDIR}
HOSTDIR		= ${HOSTDIR}
MASTERDIR	= ${MASTERDIR}
EOF

printf "INFO: Finding and adding dependencies...\n"

for f in ./tobuild/*; do
	[ "$f" = '*' ] && continue
	[ -x "$f" ] && continue
	gendeps "${f##*/}" >>deps.d
done

for f in ./deps/*; do
	[ "$f" = '*' ] && continue
	[ -x "$f" ] && continue
	gendeps "${f##*/}" >>deps.d
	chmod +x "$f"
done
